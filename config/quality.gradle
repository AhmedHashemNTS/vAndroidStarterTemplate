apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

dependencies {
  checkstyle 'com.puppycrawl.tools:checkstyle:8.14'
}

def qualityConfigDir = "$project.rootDir/config"
def reportsDir = "$project.buildDir/reports"

def sourceDir = fileTree("$project.projectDir/src/main/java")
def classesDir = fileTree("$project.buildDir/intermediates/javac/")

check.dependsOn 'checkstyle', 'findbugs', 'pmd'

android {
  lintOptions {
    lintConfig file("$qualityConfigDir/lint/rules-lint.xml")
    htmlOutput file("$reportsDir/lint/lint.html")
    warningsAsErrors true
    xmlReport false
  }
}

task checkstyle(type: Checkstyle,
    group: 'Verification',
    description: 'Runs code style checks') {

  configFile file("$qualityConfigDir/checkstyle/simple_checks.xml")
  source sourceDir

  reports {
    xml.enabled false
    html.enabled true
    html.destination file("$reportsDir/checkstyle/checkstyle.html")
  }

  classpath = files()
}

task findbugs(type: FindBugs,
    group: 'Verification',
    description: 'Inspect java bytecode for bugs') {

  excludeFilter file("$qualityConfigDir/findbugs/android-exclude-filter.xml")
  source sourceDir
  classes = classesDir

  ignoreFailures = false
  effort = "max"
  reportLevel = "high"

  reports {
    xml.enabled false
    html.enabled true
    html.destination file("$reportsDir/findbugs/findbugs.html")
  }

  classpath = files()
}

task pmd(type: Pmd,
    group: 'Verification',
    description: 'Inspect sourcecode for bugs') {

  ruleSetFiles = files("$qualityConfigDir/pmd/pmd-ruleset.xml")
  source sourceDir

  ignoreFailures = false
  ruleSets = []

  reports {
    xml.enabled false
    html.enabled true
    html.destination file("$reportsDir/pmd/pmd.html")
  }

  classpath = files()
}