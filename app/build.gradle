apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply from: '../config/quality.gradle'

def releasePropertiesFile = rootProject.file("private/release.properties")
def releaseProperties = new Properties()
releaseProperties.load(new FileInputStream(releasePropertiesFile))

def currentCommit = 'git rev-parse --short HEAD'.execute().text.trim().subSequence(0, 7)

android {
  compileSdkVersion 28
  defaultConfig {
    applicationId "com.ahmednts.scylla"
    minSdkVersion 21
    targetSdkVersion 28
    versionCode 1
    versionName "1.0"
    vectorDrawables.useSupportLibrary = true
  }

  signingConfigs {
    debugConfig {
      storeFile rootProject.file("private/debug.keystore")
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
    releaseConfig {
      storeFile rootProject.file("private/release.keystore")
      storePassword releaseProperties['storePassword']
      keyAlias releaseProperties['keyAlias']
      keyPassword releaseProperties['keyPassword']
    }
  }

  buildTypes {
    debug {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

      debuggable true
      applicationIdSuffix '.debug'
      versionNameSuffix "_${currentCommit}"

      signingConfig signingConfigs.debugConfig
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

      signingConfig signingConfigs.releaseConfig
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  lintOptions {
    // Don't abort if Lint finds an error, otherwise the Jenkins build
    // will be marked as failed, and Jenkins won't analyse the Lint output
    abortOnError false
    warning 'InvalidPackage'
  }

  applicationVariants.all { variant ->
    variant.outputs.all {
      outputFileName =
          outputFileName.replace(".apk", "-${variant.versionCode}-${variant.versionName}.apk")
    }
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

  implementation "com.android.support:appcompat-v7:$supportLibrary"
  implementation "com.android.support:design:$supportLibrary"
  implementation "com.android.support:support-vector-drawable:$supportLibrary"
  implementation "com.android.support:cardview-v7:$supportLibrary"
  implementation 'com.android.support.constraint:constraint-layout:1.1.3'

  //RxJava & RxAndroid
  implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
  implementation 'io.reactivex.rxjava2:rxjava:2.1.11'

  //Networking
  implementation "com.squareup.retrofit2:retrofit:$retrofit"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
  implementation "com.squareup.retrofit2:converter-gson:$retrofit"
  implementation "com.google.code.gson:gson:2.8.2"

  //Utils
  implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
  implementation 'com.jakewharton.timber:timber:4.5.1'
  //  implementation "com.github.bumptech.glide:glide:$glide"
  //  kapt "com.github.bumptech.glide:compiler$glide"
  //  implementation "com.facebook.stetho:stetho:$stetho"
  //  implementation "com.facebook.stetho:stetho-okhttp3:$stetho"
  //  implementation "org.parceler:parceler-api:$parceler"
  //  kapt "org.parceler:parceler:$parceler"
  //  debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary"
  //  releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary"
  //  testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary"

  testImplementation 'junit:junit:4.12'
}

// Logger out test results to console
tasks.matching { it instanceof Test }.all {
  testLogging.events = ["failed", "passed", "skipped"]
}
