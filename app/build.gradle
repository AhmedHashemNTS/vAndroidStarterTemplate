buildscript {
  repositories {
    maven { url 'https://maven.fabric.io/public' }
  }

  dependencies {
    classpath 'io.fabric.tools:gradle:1.+'
  }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

apply from: '../config/quality.gradle'

def releasePropertiesFile = rootProject.file("private/release.properties")
def releaseProperties = new Properties()
releaseProperties.load(new FileInputStream(releasePropertiesFile))

android {
  compileSdkVersion 26
  defaultConfig {
    applicationId "com.ahmednts.scylla"
    minSdkVersion 17
    targetSdkVersion 26
    versionCode 1
    versionName "1.0"
  }

  signingConfigs {
    debugConfig {
      storeFile rootProject.file("private/debug.keystore")
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
    releaseConfig {
      storeFile rootProject.file("private/release.keystore")
      storePassword releaseProperties['storePassword']
      keyAlias releaseProperties['keyAlias']
      keyPassword releaseProperties['keyPassword']
    }
  }

  buildTypes {
    debug {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

      debuggable true
      applicationIdSuffix '.debug'

      signingConfig signingConfigs.debugConfig
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

      signingConfig signingConfigs.releaseConfig
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  lintOptions {
    // Don't abort if Lint finds an error, otherwise the Jenkins build
    // will be marked as failed, and Jenkins won't analyse the Lint output
    abortOnError false
    warning 'InvalidPackage'
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor' // butterknife
  }
}

repositories {
  maven { url 'https://maven.fabric.io/public' }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibraryVersion}"
  //  implementation "com.android.support:design:${rootProject.ext.supportLibraryVersion}"
  //  implementation "com.android.support:cardview-v7:${rootProject.ext.supportLibraryVersion}"
  implementation 'com.android.support.constraint:constraint-layout:1.0.2'

  //RxJava & RxAndroid
 implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
 implementation 'io.reactivex.rxjava2:rxjava:2.1.5'

  //Networking
  implementation 'com.squareup.retrofit2:retrofit:2.3.0'
  implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
  implementation 'com.google.code.gson:gson:2.8.1'
  implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

  //  implementation 'com.github.bumptech.glide:glide:4.0.0'
  //  annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'

  //UI
  compile 'com.jakewharton:butterknife:8.8.1'
  annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

  //Utils
  implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
  implementation 'com.jakewharton.timber:timber:4.5.1'
  //  implementation 'com.facebook.stetho:stetho:1.5.0'
  //  implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
  //  implementation 'org.parceler:parceler-api:1.1.9'
  //  annotationProcessor 'org.parceler:parceler:1.1.9'
  //  debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
  //  releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
  //  testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'

  testImplementation 'junit:junit:4.12'
  implementation('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
    transitive = true
  }
}

// Logger out test results to console
tasks.matching { it instanceof Test }.all {
  testLogging.events = ["failed", "passed", "skipped"]
}